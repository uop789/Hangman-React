{"version":3,"sources":["components/Header.js","components/Notification.js","components/GameContainer/GameConfig.js","components/GameContainer/Figure.js","components/GameContainer/Status.js","helper.js","components/GameContainer/GameGuessing.js","components/GameContainer/GameResult.js","components/GameContainer/Game.js","App.js","index.js"],"names":["Header","Notification","errorMessage","className","GameConfig","targetWord","handleInput","handleClick","type","value","onChange","onClick","Figure","errors","missLetters","length","height","width","x1","y1","x2","y2","cx","cy","r","Word","correctLetters","map","letter","includes","Misses","index","Status","guess","hasDuplicate","arr","element","GameGuessing","showNotification","setGuess","setCorrectLetters","setMissLetters","useEffect","handleKeydown","event","key","keyCode","toLowerCase","window","addEventListener","removeEventListener","GameResult","setTargetWord","setStartGuess","result","filter","Game","useState","startGuess","input","target","test","App","setErrorMessage","text","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.74711db5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h1>\r\n            Welcome to the Hangman Game!    \r\n        </h1>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Notification = ({ errorMessage }) => {\r\n    return (\r\n        <div className=\"notification-container\">\r\n          { errorMessage && <p>{errorMessage}</p> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React from 'react'\r\n\r\nconst GameConfig = ({ targetWord, handleInput, handleClick }) => {\r\n    return (\r\n        <div className= \"gameConfig_container\">\r\n            <p>Player one type in a target word</p>\r\n            <input type=\"text\" value = {targetWord} onChange = {handleInput} />\r\n            <button onClick= {handleClick}>Start Guessing</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameConfig\r\n","import React from 'react'\r\n\r\nconst Figure = ({ missLetters }) => {\r\n  const errors = missLetters.length\r\n\r\n  return (\r\n    <svg height=\"250\" width=\"200\" className=\"figure-container\">\r\n      {/* <!-- Rod --> */}\r\n      <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\r\n      <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"50\" />\r\n      <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"230\" />\r\n      <line x1=\"60\" y1=\"230\" x2=\"180\" y2=\"230\" />\r\n\r\n      {/* <!-- Head --> */}\r\n      {errors > 0 &&\r\n        <circle cx=\"60\" cy=\"70\" r=\"20\" />\r\n      }\r\n      {/* <!-- Body --> */}\r\n      {errors > 1 &&\r\n        <line x1=\"60\" y1=\"90\" x2=\"60\" y2=\"150\" />\r\n      }\r\n      {/* <!-- Arms --> */}\r\n      {errors > 2 &&\r\n         <line x1=\"60\" y1=\"120\" x2=\"40\" y2=\"100\" />\r\n      }\r\n      {errors > 3 &&\r\n        <line x1=\"60\" y1=\"120\" x2=\"80\" y2=\"100\" />\r\n      }\r\n      {/* <!-- Legs --> */}\r\n      {errors > 4 &&\r\n        <line x1=\"60\" y1=\"150\" x2=\"40\" y2=\"180\" />\r\n      }\r\n      {errors > 5 &&\r\n        <line x1=\"60\" y1=\"150\" x2=\"80\" y2=\"180\" />\r\n      }\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Figure","import React from 'react'\r\n\r\nconst Word = ({ targetWord, correctLetters }) => {\r\n    return (\r\n        <>\r\n            Word: {[...targetWord].map(letter => correctLetters.includes(letter) ? `${letter} ` : \"_ \")}\r\n        </>\r\n    )\r\n}\r\n\r\nconst Misses = ({ missLetters }) => {\r\n    return (\r\n        <>\r\n            Misses: {missLetters.map((letter,index) => index === missLetters.length-1 ? letter : `${letter}, `)}\r\n        </>\r\n    )\r\n} \r\n\r\nconst Status = ({ targetWord, guess, correctLetters, missLetters }) => {\r\n    return (\r\n        <div className=\"status-container\">\r\n            <Word targetWord = {targetWord} correctLetters = {correctLetters} />\r\n            <p>Guess: {guess}</p>\r\n            <Misses missLetters = {missLetters} />   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Status\r\n","export const hasDuplicate = (arr, element) => {\r\n    return arr.includes(element)\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport Figure from './Figure'\r\nimport Status from './Status'\r\nimport { hasDuplicate } from '../../helper'\r\n\r\nconst GameGuessing = ({ targetWord, showNotification, guess, setGuess, correctLetters, setCorrectLetters, missLetters, setMissLetters }) => {\r\n    \r\n\r\n    useEffect(() => {\r\n        const handleKeydown = event => {\r\n            const { key, keyCode } = event;\r\n            if (keyCode >= 65 && keyCode <= 90) {\r\n              const letter = key.toLowerCase();\r\n              setGuess(key)\r\n              targetWord.includes(letter) ?  !hasDuplicate(correctLetters, letter) \r\n                                                ? setCorrectLetters([...correctLetters, letter]) \r\n                                                : showNotification('You have already guessed this letter')\r\n                                          : !hasDuplicate(missLetters, letter)\r\n                                                ? setMissLetters([...missLetters, letter])\r\n                                                : showNotification('You have already guessed this letter')  \r\n            } else {\r\n                showNotification(\"only 26 letters allowed\") \r\n            }\r\n        }\r\n        window.addEventListener('keydown', handleKeydown);\r\n    \r\n        return () => window.removeEventListener('keydown', handleKeydown);\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      }, [guess, correctLetters, missLetters]);\r\n\r\n    return (\r\n        <div>\r\n           <h3>Find the hidden word - Player two enter a letter</h3>\r\n           <Figure missLetters= {missLetters}/> \r\n           <Status targetWord = {targetWord} guess = {guess} correctLetters = {correctLetters} missLetters = {missLetters} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameGuessing\r\n","import React from 'react'\r\n\r\nconst GameResult = ({targetWord, setTargetWord, correctLetters, setCorrectLetters, missLetters, setMissLetters, setStartGuess }) => {\r\n    const hasWon = () => {\r\n        if (missLetters.length === 6) {\r\n            return false\r\n        }\r\n       return [...targetWord].filter(letter => !correctLetters.includes(letter)).length === 0 ?  true :  \"pending\"\r\n    }\r\n\r\n    const result = hasWon()\r\n\r\n    const handlePlayAgain = () => {\r\n        setStartGuess(false);\r\n        setTargetWord(\"\")\r\n        setCorrectLetters([]);\r\n        setMissLetters([])\r\n    }\r\n\r\n    if (result !== 'pending') {\r\n        return (\r\n            <div className=\"result-container\">\r\n                <div className = {result ? 'win' : 'lost'}>\r\n                    { result ? <h2 className=\"win\">You got it! Player 2 won!</h2> \r\n                            : <h2>You used all chances! Player 1 won! The word was {targetWord}!</h2> \r\n                    }\r\n                </div>                        \r\n                <button onClick={handlePlayAgain}>Play Again</button>\r\n            </div>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n    \r\n}\r\n\r\nexport default GameResult\r\n","import React, { useState } from 'react'\r\nimport GameConfig from './GameConfig'\r\nimport GameGuessing from './GameGuessing'\r\nimport GameResult from './GameResult'\r\n\r\nconst Game = ({ showNotification }) => {\r\n    const [targetWord, setTargetWord] = useState(\"\");\r\n    const [startGuess, setStartGuess] = useState(false);\r\n    const [guess, setGuess] = useState('');\r\n    const [correctLetters, setCorrectLetters] = useState([]);\r\n    const [missLetters, setMissLetters] = useState([]);\r\n\r\n    const handleInput = (event) => {\r\n        const input = event.target.value;\r\n        if (/^[a-z]+$/.test(input) || input === \"\") {\r\n          setTargetWord(input)\r\n        } else {\r\n          showNotification(\"only 26 letters in lowecase allowed\")\r\n        } \r\n    }\r\n\r\n    const handleClick = () => {\r\n      if(targetWord.length > 0) {\r\n        setStartGuess(true)\r\n      } else {\r\n        showNotification(\"please give a target word\")\r\n      }  \r\n    }\r\n\r\n    return (\r\n        <>\r\n         { !startGuess ? <GameConfig targetWord = {targetWord}  handleInput = {handleInput} handleClick = {handleClick} /> \r\n                       :<> \r\n                          <GameGuessing targetWord = {targetWord} \r\n                                        showNotification = {showNotification} \r\n                                        guess = {guess}\r\n                                        setGuess = {setGuess}\r\n                                        correctLetters = {correctLetters}\r\n                                        setCorrectLetters = {setCorrectLetters}\r\n                                        missLetters = {missLetters}\r\n                                        setMissLetters = {setMissLetters}\r\n                          />\r\n                          <GameResult setStartGuess = {setStartGuess} \r\n                                      targetWord = {targetWord}\r\n                                      setTargetWord = {setTargetWord}\r\n                                      correctLetters = {correctLetters}\r\n                                      setCorrectLetters = {setCorrectLetters}\r\n                                      missLetters = {missLetters}\r\n                                      setMissLetters = {setMissLetters}\r\n                          />\r\n                        </>   \r\n         }             \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Game\r\n","import React, { useState } from 'react'\nimport './App.css';\nimport Header from './components/Header'\nimport Notification from './components/Notification'\nimport Game from './components/GameContainer/Game'\n\nfunction App() {\n  const [errorMessage, setErrorMessage] = useState(\"\")\n\n  const showNotification = (text) => {\n    setErrorMessage(text);\n    setTimeout(() => {\n      setErrorMessage(\"\");\n    }, 2000);  \n  } \n\n  return (\n    <div className=\"App\">\n     <Header />\n     <Notification errorMessage = {errorMessage} />\n     <Game showNotification = {showNotification} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}