{"version":3,"sources":["components/Header.js","components/Notification.js","components/GameContainer/GameConfig.js","components/GameContainer/Figure.js","components/GameContainer/Status.js","helper.js","components/GameContainer/GameGuessing.js","components/GameContainer/GameResult.js","components/GameContainer/Game.js","App.js","index.js"],"names":["Header","Notification","errorMessage","className","GameConfig","targetWord","handleInput","handleClick","type","value","onChange","onClick","Figure","errors","missLetters","length","height","width","x1","y1","x2","y2","cx","cy","r","Word","correctLetters","map","letter","includes","Misses","index","Status","guess","hasDuplicate","arr","element","GameGuessing","gameStatus","showNotification","setCorrectLetters","setMissLetters","useState","setGuess","useEffect","handleKeydown","event","key","keyCode","toLowerCase","window","addEventListener","removeEventListener","GameResult","PlayAgain","isPlayer2Winner","Game","setTargetWord","setGameStatus","setIsPlayer2Winner","result","filter","compare","input","target","test","App","setErrorMessage","text","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aee2b64e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <h1>\r\n            Welcome to the Hangman Game!    \r\n        </h1>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Notification = ({ errorMessage }) => {\r\n    return (\r\n        <div className=\"notification-container\">\r\n          { errorMessage && <p>{errorMessage}</p> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React from 'react';\r\n\r\nconst GameConfig = ({ targetWord, handleInput, handleClick }) => {\r\n\treturn (\r\n\t\t<div className=\"gameConfig_container\">\r\n\t\t\t<p>Player one type in a target word</p>\r\n\t\t\t<input\r\n\t\t\t\tclassName=\"target_word\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={targetWord}\r\n\t\t\t\tonChange={handleInput}\r\n\t\t\t/>\r\n\t\t\t<button onClick={handleClick}>Start Guessing</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GameConfig;\r\n","import React from 'react'\r\n\r\nconst Figure = ({ missLetters }) => {\r\n  const errors = missLetters.length\r\n\r\n  return (\r\n    <svg height=\"250\" width=\"200\" className=\"figure-container\">\r\n      {/* <!-- Rod --> */}\r\n      <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\r\n      <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"50\" />\r\n      <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"230\" />\r\n      <line x1=\"60\" y1=\"230\" x2=\"180\" y2=\"230\" />\r\n\r\n      {/* <!-- Head --> */}\r\n      {errors > 0 &&\r\n        <circle cx=\"60\" cy=\"70\" r=\"20\" />\r\n      }\r\n      {/* <!-- Body --> */}\r\n      {errors > 1 &&\r\n        <line x1=\"60\" y1=\"90\" x2=\"60\" y2=\"150\" />\r\n      }\r\n      {/* <!-- Arms --> */}\r\n      {errors > 2 &&\r\n         <line x1=\"60\" y1=\"120\" x2=\"40\" y2=\"100\" />\r\n      }\r\n      {errors > 3 &&\r\n        <line x1=\"60\" y1=\"120\" x2=\"80\" y2=\"100\" />\r\n      }\r\n      {/* <!-- Legs --> */}\r\n      {errors > 4 &&\r\n        <line x1=\"60\" y1=\"150\" x2=\"40\" y2=\"180\" />\r\n      }\r\n      {errors > 5 &&\r\n        <line x1=\"60\" y1=\"150\" x2=\"80\" y2=\"180\" />\r\n      }\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Figure","import React from 'react';\r\n\r\nconst Word = ({ targetWord, correctLetters }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\tWord:{' '}\r\n\t\t\t{[...targetWord].map((letter) =>\r\n\t\t\t\tcorrectLetters.includes(letter) ? `${letter} ` : '_ '\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst Misses = ({ missLetters }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\tMisses:{' '}\r\n\t\t\t{missLetters.map((letter, index) =>\r\n\t\t\t\tindex === missLetters.length - 1 ? letter : `${letter}, `\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst Status = ({ targetWord, guess, correctLetters, missLetters }) => {\r\n\treturn (\r\n\t\t<div className=\"status-container\">\r\n\t\t\t<Word targetWord={targetWord} correctLetters={correctLetters} />\r\n\t\t\t<p>Guess: {guess}</p>\r\n\t\t\t<Misses missLetters={missLetters} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Status;\r\n","export const hasDuplicate = (arr, element) => {\r\n\treturn arr.includes(element);\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport Figure from './Figure';\r\nimport Status from './Status';\r\nimport { hasDuplicate } from '../../helper';\r\n\r\nconst GameGuessing = ({\r\n\tgameStatus,\r\n\ttargetWord,\r\n\tshowNotification,\r\n\tcorrectLetters,\r\n\tsetCorrectLetters,\r\n\tmissLetters,\r\n\tsetMissLetters,\r\n}) => {\r\n\tconst [guess, setGuess] = useState('');\r\n\tuseEffect(() => {\r\n\t\tif (gameStatus !== 'ongoing') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst handleKeydown = (event) => {\r\n\t\t\tconst { key, keyCode } = event;\r\n\t\t\tif (keyCode >= 65 && keyCode <= 90) {\r\n\t\t\t\tconst letter = key.toLowerCase();\r\n\t\t\t\tsetGuess(key);\r\n\t\t\t\ttargetWord.includes(letter)\r\n\t\t\t\t\t? !hasDuplicate(correctLetters, letter)\r\n\t\t\t\t\t\t? setCorrectLetters([...correctLetters, letter])\r\n\t\t\t\t\t\t: showNotification('You have already guessed this letter')\r\n\t\t\t\t\t: !hasDuplicate(missLetters, letter)\r\n\t\t\t\t\t? setMissLetters([...missLetters, letter])\r\n\t\t\t\t\t: showNotification('You have already guessed this letter');\r\n\t\t\t} else {\r\n\t\t\t\tshowNotification('only 26 letters allowed');\r\n\t\t\t}\r\n\t\t};\r\n\t\twindow.addEventListener('keydown', handleKeydown);\r\n\t\treturn () => window.removeEventListener('keydown', handleKeydown);\r\n\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [gameStatus, correctLetters, missLetters]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h3>Find the hidden word - Player two enter a letter</h3>\r\n\t\t\t<Figure missLetters={missLetters} />\r\n\t\t\t<Status\r\n\t\t\t\ttargetWord={targetWord}\r\n\t\t\t\tguess={guess}\r\n\t\t\t\tcorrectLetters={correctLetters}\r\n\t\t\t\tmissLetters={missLetters}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GameGuessing;\r\n","import React from 'react';\r\n\r\nconst GameResult = ({ targetWord, PlayAgain, isPlayer2Winner }) => {\r\n\treturn (\r\n\t\t<div className=\"result-container\">\r\n\t\t\t<div className={isPlayer2Winner ? 'win' : 'lost'}>\r\n\t\t\t\t{isPlayer2Winner ? (\r\n\t\t\t\t\t<h2>You got it! Player 2 won!</h2>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<h2>\r\n\t\t\t\t\t\tYou used all chances! Player 1 won! The word was {targetWord}!\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<button onClick={PlayAgain}>Play Again</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GameResult;\r\n","import React, { useState, useEffect } from 'react';\r\nimport GameConfig from './GameConfig';\r\nimport GameGuessing from './GameGuessing';\r\nimport GameResult from './GameResult';\r\n\r\nconst Status = ['start', 'ongoing', 'end'];\r\n\r\nconst Game = ({ showNotification }) => {\r\n\tconst [targetWord, setTargetWord] = useState('');\r\n\tconst [gameStatus, setGameStatus] = useState(Status[0]);\r\n\tconst [correctLetters, setCorrectLetters] = useState([]);\r\n\tconst [missLetters, setMissLetters] = useState([]);\r\n\tconst [isPlayer2Winner, setIsPlayer2Winner] = useState(false);\r\n\r\n\tconst handleInput = (event) => {\r\n\t\tconst input = event.target.value;\r\n\t\tif (/^[a-z]+$/.test(input) || input === '') {\r\n\t\t\tsetTargetWord(input);\r\n\t\t} else {\r\n\t\t\tshowNotification('only 26 letters in lowecase allowed');\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClick = () => {\r\n\t\tif (targetWord.length > 0) {\r\n\t\t\tsetGameStatus(Status[1]);\r\n\t\t} else {\r\n\t\t\tshowNotification('please give a target word');\r\n\t\t}\r\n\t};\r\n\r\n\tconst compare = (targetWord, missLetters, correctLetters) => {\r\n\t\tif (missLetters.length === 6) {\r\n\t\t\treturn 'lost';\r\n\t\t}\r\n\t\treturn [...targetWord].filter((letter) => !correctLetters.includes(letter))\r\n\t\t\t.length === 0\r\n\t\t\t? 'won'\r\n\t\t\t: 'pending';\r\n\t};\r\n\r\n\tconst handlePlayAgain = () => {\r\n\t\tsetGameStatus(Status[0]);\r\n\t\tsetTargetWord('');\r\n\t\tsetCorrectLetters([]);\r\n\t\tsetMissLetters([]);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (gameStatus === 'ongoing') {\r\n\t\t\tconst result = compare(targetWord, missLetters, correctLetters);\r\n\t\t\tif (result === 'won') {\r\n\t\t\t\tsetGameStatus(Status[2]);\r\n\t\t\t\tsetIsPlayer2Winner(true);\r\n\t\t\t}\r\n\t\t\tif (result === 'lost') {\r\n\t\t\t\tsetGameStatus(Status[2]);\r\n\t\t\t\tsetIsPlayer2Winner(false);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [gameStatus, missLetters, correctLetters]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{gameStatus === 'start' ? (\r\n\t\t\t\t<GameConfig\r\n\t\t\t\t\ttargetWord={targetWord}\r\n\t\t\t\t\thandleInput={handleInput}\r\n\t\t\t\t\thandleClick={handleClick}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<GameGuessing\r\n\t\t\t\t\t\tgameStatus={gameStatus}\r\n\t\t\t\t\t\ttargetWord={targetWord}\r\n\t\t\t\t\t\tshowNotification={showNotification}\r\n\t\t\t\t\t\tcorrectLetters={correctLetters}\r\n\t\t\t\t\t\tsetCorrectLetters={setCorrectLetters}\r\n\t\t\t\t\t\tmissLetters={missLetters}\r\n\t\t\t\t\t\tsetMissLetters={setMissLetters}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t{gameStatus === 'end' && (\r\n\t\t\t\t\t\t<GameResult\r\n\t\t\t\t\t\t\ttargetWord={targetWord}\r\n\t\t\t\t\t\t\tisPlayer2Winner={isPlayer2Winner}\r\n\t\t\t\t\t\t\tPlayAgain={handlePlayAgain}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Game;\r\n","import React, { useState } from 'react'\nimport './App.css';\nimport Header from './components/Header'\nimport Notification from './components/Notification'\nimport Game from './components/GameContainer/Game'\n\nfunction App() {\n  const [errorMessage, setErrorMessage] = useState(\"\")\n\n  const showNotification = (text) => {\n    setErrorMessage(text);\n    setTimeout(() => {\n      setErrorMessage(\"\");\n    }, 2000);  \n  } \n\n  return (\n    <div className=\"App\">\n     <Header />\n     <Notification errorMessage = {errorMessage} />\n     <Game showNotification = {showNotification} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}